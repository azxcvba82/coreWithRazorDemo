@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime JS

@code {
    private LoginModel loginModel = new();
    private string errorMessage;

    private async Task LoginUser()
    {
        var response = await Http.PostAsJsonAsync("api/login", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var token = await response.Content.ReadAsStringAsync();
            // Store JWT in local storage
            await JS.InvokeVoidAsync("localStorage.setItem", "authToken", token);
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            errorMessage = "Invalid login credentials.";
        }
    }
}

<h3>Login</h3>

<EditForm Model="loginModel" OnValidSubmit="LoginUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="loginModel.username" class="form-control" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText type="password" id="password" @bind-Value="loginModel.password" class="form-control" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <p class="text-danger">@errorMessage</p>
    }
</EditForm>
